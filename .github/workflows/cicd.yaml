name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo ‡∏ô‡∏µ‡πâ (‡∏°‡∏µ manifests, cicd.yaml)
      - name: Checkout manifests repo
        uses: actions/checkout@v3

      # 2. Checkout ‡∏≠‡∏µ‡∏Å repo (‡∏°‡∏µ Dockerfile)  
      - name: Checkout app repo
        uses: actions/checkout@v3
        with:
          repository: auttz/DockerFile_AppPython   # üëà repo ‡∏ó‡∏µ‡πà‡∏°‡∏µ Dockerfile
          path: app                               # clone ‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå ./app

      # 3. Login Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 4. Build Docker image (‡πÉ‡∏ä‡πâ Dockerfile ‡∏à‡∏≤‡∏Å ./app)
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/minikube:1.8 ./app

      # 5. Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/minikube:1.8

  deploy:
    runs-on: self-hosted   # ‚úÖ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ Minikube
    needs: build           # ‚úÖ ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á build ‡πÄ‡∏™‡∏£‡πá‡∏à

    steps:
      # 1. Checkout manifests repo (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ deployment.yaml, postgres.yaml)
      - name: Checkout manifests repo
        uses: actions/checkout@v3

      # 2. Start Minikube (‡πÉ‡∏ä‡πâ Docker driver)
      - name: Start Minikube
        shell: cmd
        run: |
          minikube start --driver=docker
          kubectl config use-context minikube

      # 3. Deploy ‡πÑ‡∏õ Minikube
      - name: Deploy to Minikube
        shell: cmd
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f postgres.yaml
          kubectl rollout status deployment/myapp
